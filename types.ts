// This file is autogenerated by liwe3-svelte
/* eslint-disable @typescript-eslint/no-explicit-any */

/*=== f2c_start __file ===*/

/*=== f2c_end __file ===*/

/** UserRegistration */
export interface UserRegistration {
	/** The user email */
	email: string;
	/** The user password */
	password: string;
	/** User first name */
	name?: string;
	/** User lastname */
	lastname?: string;
}

/** UserActivationCode */
export interface UserActivationCode {
	/** Temporary code to complete action */
	code?: string;
	/** The user email */
	email?: string;
}

/** UserFaceRec */
export interface UserFaceRec {
	/** the main id field */
	id: string;
	/** The domain code */
	domain?: string;
	/** The user id */
	id_user?: string;
	/** The upload image id */
	id_upload?: string;
	/** The upload file name */
	filename?: string;
	/** The upload path */
	path?: string;
}

/** User */
export interface User {
	/** the main id field */
	id: string;
	/** The domain code */
	domain: string;
	/** The user email */
	email: string;
	/**  */
	username?: string;
	/** User name */
	name?: string;
	/** User lastname */
	lastname?: string;
	/** User permissions */
	perms?: any;
	/** If the user can log in or not */
	enabled?: boolean;
	/** User level */
	level?: number;
	/** User login password */
	password?: string;
	/** User unique code (used for registration and password recovery) */
	code?: string;
	/** Extra items for user details (jsoninzed) */
	extra?: any;
	/** Preferred language */
	language?: string;
	/** The user main phone */
	phone?: string;
	/** The user Avatar URL */
	avatar?: string;
	/** tags for the type */
	tags?: string[];
	/** The id of the Upload object (for the avatar) */
	id_upload?: string;
	/** The date when the user has been deleted */
	deleted?: Date;
	/** Addresses binded to the user */
	addresses?: Address[];
	/** Facebook account */
	facebook?: string;
	/** Twitter account */
	twitter?: string;
	/** Linkedin account */
	linkedin?: string;
	/** Instagram account */
	instagram?: string;
	/** Website URL */
	website?: string;
	/** User tagline */
	tagline?: string;
	/** User bio */
	bio?: string;
	/** All users Face Rec info */
	faces?: UserFaceRec[];
	/** The wallet ID */
	wallet?: string;
	/** The user group */
	group?: string;
}

/** UserSessionData */
export interface UserSessionData {
	/** the main id field */
	id: string;
	/** The JWT access token */
	access_token?: string;
	/** The user name */
	name?: string;
	/** The user lastname */
	lastname?: string;
	/** The user avatar URL */
	avatar?: string;
	/** The token type (defaults to Bearer) */
	token_type?: string;
	/** Array of user perms */
	perms?: any;
	/** The user email */
	email?: string;
	/**  */
	id_user?: string;
	/** The Nonce used for 2FA */
	nonce?: string;
	/**  */
	group?: string;
}

/** UserPerms */
export interface UserPerms {
	/** The module name of the permissions */
	module_name?: string;
	/** The list of permissions for the given module */
	permissions?: string[];
}

/** UserDetails */
export interface UserDetails {
	/** the main id field */
	id: string;
	/**  */
	username?: string;
	/** User name */
	name?: string;
	/** User lastname */
	lastname?: string;
	/** User email */
	email?: string;
	/** User avatar path */
	avatar?: string;
}

/** User2FA */
export interface User2FA {
	/** The ID User */
	id_user: string;
	/** The 2FA code */
	twofactor?: string;
	/** If T, twofactor is enabled */
	enabled?: boolean;
	/** The nonce code */
	nonce?: string;
}

/** UserSmall */
export interface UserSmall {
	/** the main id field */
	id: string;
	/** The user domain */
	domain: string;
	/** The user first name */
	name: string;
	/** The user lastname */
	lastname: string;
	/** The user username */
	username: string;
	/** The user email */
	email: string;
}

